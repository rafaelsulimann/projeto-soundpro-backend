##COM CONFIG SERVER
#
#spring:
#  servlet:
#      multipart:
#        max-file-size: 16MB
#  application:
#    name: soundpro-sound-service
#  config:
#    import: 'configserver:'
#  cloud:
#    config:
#      discovery:
#        serviceId: ${configServer.serviceId}
#      username: ${configServer.username}
#      password: ${configServer.password}
#      uri: 'http://${configServer.username}:${configServer.password}@${configServer.host}:8888'
#  data:
#    mongodb:
#      uri: mongodb://localhost:27017/soundpro
#  
#logging: #é a propriedade raiz das configurações de logging no arquivo YAML.
#  level: #define o nível de logging para cada pacote ou classe específica.
#    com:
#      ead: TRACE #define o nível de logging para o pacote "com.ead" como TRACE. Isso significa que todas as mensagens de log com níveis de TRACE, DEBUG, INFO, WARN, ERROR e FATAL serão registradas para este pacote.
#    root: INFO #define o nível de logging para o pacote raiz como INFO. Isso significa que todas as mensagens de log com níveis de INFO, WARN, ERROR e FATAL serão registradas para a aplicação como um todo.
#    org:
#      springframework:
#        web: DEBUG #como DEBUG. Isso significa que todas as mensagens de log com níveis de DEBUG, INFO, WARN, ERROR e FATAL serão registradas para este pacote.
#      hibernate: INFO #define o nível de logging para o pacote "org.hibernate" como INFO. Isso significa que todas as mensagens de log com níveis de INFO, WARN, ERROR e FATAL serão registradas para este pacote.
#
#
#configServer:
#  serviceId: ${SPRING_CLOUD_CONFIG_DISCOVERY_SERVICE_ID:config-server}
#  username: ${CONFIG_SERVER_USERNAME:configserver}
#  password: ${CONFIG_SERVER_PASSWORD:1234567}
#  host: ${CONFIG_SERVER_HOST:localhost}

#SEM CONFIG SERVER
server:
  port: 8081
  servlet:
    context-path: '/soundpro-sound/'

spring:
  servlet:
    multipart:
      max-file-size: 16MB
      max-request-size: 16MB
  application:
    name: soundpro-sound-service
  output:
    ansi:
      enabled: always

eureka:
  client:
    service-url:
      defaultZone: 'http://${serviceRegistry.username}:${serviceRegistry.password}@localhost:8761/eureka'
  instance:
    hostname: ${serviceRegistry.defaultZoneHost}
  
serviceRegistry:
  username: ${SERVICE_REGISTRY_USERNAME:serviceregistry}
  password: ${SERVICE_REGISTRY_PASSWORD:1234567}
  defaultZoneHost: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:host.docker.internal}

logging: #é a propriedade raiz das configurações de logging no arquivo YAML.
  level: #define o nível de logging para cada pacote ou classe específica.
    com:
      ead: TRACE #define o nível de logging para o pacote "com.ead" como TRACE. Isso significa que todas as mensagens de log com níveis de TRACE, DEBUG, INFO, WARN, ERROR e FATAL serão registradas para este pacote.
    root: INFO #define o nível de logging para o pacote raiz como INFO. Isso significa que todas as mensagens de log com níveis de INFO, WARN, ERROR e FATAL serão registradas para a aplicação como um todo.
    org:
      springframework:
        web: DEBUG #como DEBUG. Isso significa que todas as mensagens de log com níveis de DEBUG, INFO, WARN, ERROR e FATAL serão registradas para este pacote.
      hibernate: INFO #define o nível de logging para o pacote "org.hibernate" como INFO. Isso significa que todas as mensagens de log com níveis de INFO, WARN, ERROR e FATAL serão registradas para este pacote.